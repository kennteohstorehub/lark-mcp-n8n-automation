# =====================================================
# 🚀 Lark MCP n8n Automation Environment Template
# =====================================================
# Copy this file to .env and fill in your actual values

# 📱 Lark Application Configuration
# Get these values from: https://open.larksuite.com/app
LARK_APP_ID=cli_a1b2c3d4e5f6g7h8
LARK_APP_SECRET=your_lark_app_secret_here

# 🌐 Lark Domain Configuration
# Use https://open.larksuite.com for international
# Use https://open.feishu.cn for China
LARK_DOMAIN=https://open.larksuite.com

# 🔧 MCP Server Configuration
MCP_SERVER_PORT=3000
MCP_SERVER_HOST=localhost
MCP_SERVER_LOG_LEVEL=info

# 🔐 Authentication & Security
# Generate a strong secret for token signing
MCP_SECRET_KEY=your_super_secret_key_here_min_32_characters

# Enable/disable authentication for MCP endpoints
MCP_AUTH_ENABLED=true

# CORS settings
CORS_ORIGIN=*
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS

# ⚡ Rate Limiting Configuration
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# 🔍 Logging Configuration
LOG_LEVEL=info
LOG_FILE=logs/app.log

# 🧪 Development & Testing
NODE_ENV=development

# 📈 Monitoring & Observability
METRICS_ENABLED=true
HEALTH_CHECK_ENABLED=true

# 🔄 Integration Settings
# n8n webhook configuration
N8N_WEBHOOK_URL=http://localhost:5678/webhook

# 🚀 Performance Configuration
MAX_CONCURRENT_REQUESTS=50
REQUEST_TIMEOUT_MS=30000

# =====================================================
# 📋 Setup Instructions:
# 1. Copy this file to .env: cp env.template .env
# 2. Fill in your actual Lark app credentials
# 3. Run: npm run setup (for interactive configuration)
# 4. Start the server: npm start
# ===================================================== 